version: '3.7'
services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    restart: always
    volumes:
      - static_volume:/opt/staticfiles/
      - media_volume:/opt/mediafiles/
    ports:
      - "81:81"
    depends_on:
      - backend

  postgres:
    image: postgres:12
    restart: always
#    environment:
#      POSTGRES_DB: weather
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
    env_file:
      - .env
    ports:
      - '5435:5432'
    volumes:
      - db-data:/var/lib/postgresql/data:cached

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    command: ./docker/backend/start
    restart: unless-stopped
    volumes:
      - ./:/otp
      - static_volume:/opt/staticfiles/
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  redis:
    image: redis
    restart: always

  celery:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    env_file: .env
    command: celery -A weatherscraper worker -l info
    restart: always
    depends_on:
      - redis

  celerybeat:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    env_file: .env
    command: celery -A weatherscraper beat -l info
    restart: always
    depends_on:
      - redis
      - celery

volumes:
  static_volume:
  db-data:
  media_volume: